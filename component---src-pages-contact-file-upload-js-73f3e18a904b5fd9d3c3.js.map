{"version":3,"file":"component---src-pages-contact-file-upload-js-73f3e18a904b5fd9d3c3.js","mappings":"iOAIA,SAASA,EAAOC,GACd,MAAMC,EAAW,IAAIC,SAErB,IAAK,MAAMC,KAAOC,OAAOC,KAAKL,GAC5BC,EAASK,OAAOH,EAAKH,EAAKG,IAG5B,OAAOF,CACT,CAAC,IAEoBM,EAAO,SAAAC,GAC1B,SAAAD,EAAYE,GAAQ,IAADC,EAED,OADhBA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MAIdG,aAAgBC,IACdH,EAAKI,SAAS,CAAE,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,OAAQ,EACnDP,EAEDQ,iBAAoBL,IAClBH,EAAKI,SAAS,CAAE,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOI,MAAM,IAAK,EACtDT,EAEDU,aAAgBP,IACdA,EAAEQ,iBACF,MAAMC,EAAOT,EAAEE,OACfQ,MAAM,IAAK,CACTC,OAAQ,OACRC,KAAM1B,EAAO,CACX,YAAauB,EAAKI,aAAa,WAC5BhB,EAAKiB,UAGTC,MAAK,KAAMC,EAAAA,EAAAA,IAASP,EAAKI,aAAa,aACtCI,OAAOC,GAAUC,MAAMD,IAAO,EAtBjCrB,EAAKiB,MAAQ,CAAC,EAAEjB,CAClB,CAwFC,OA5FyBuB,EAAAA,EAAAA,GAAA1B,EAAAC,GAIzBD,EAAA2B,UAwBDC,OAAA,WACE,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAA,WAASE,UAAU,WACjBF,EAAAA,cAAA,OAAKE,UAAU,aACbF,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,QACEpB,KAAK,cACLQ,OAAO,OACPe,OAAO,mBACP,eAAa,OACb,wBAAsB,YACtBC,SAAUC,KAAKrB,cAGfgB,EAAAA,cAAA,SAAOM,KAAK,SAAS1B,KAAK,YAAYC,MAAM,gBAC5CmB,EAAAA,cAAA,OAAKO,QAAM,GACTP,EAAAA,cAAA,aAAO,uBACgB,IACrBA,EAAAA,cAAA,SAAOpB,KAAK,YAAY4B,SAAUH,KAAK7B,iBAG3CwB,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,SAAOE,UAAU,QAAQO,QAAS,QAAQ,aAG1CT,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAAA,SACEE,UAAU,QACVI,KAAM,OACN1B,KAAM,OACN4B,SAAUH,KAAK7B,aACfkC,GAAI,OACJC,UAAU,MAIhBX,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,OAAKE,UAAU,QACbF,EAAAA,cAAA,SAAOE,UAAU,cACfF,EAAAA,cAAA,SACEE,UAAU,aACVI,KAAK,OACL1B,KAAK,aACL4B,SAAUH,KAAKvB,mBAEjBkB,EAAAA,cAAA,QAAME,UAAU,YACdF,EAAAA,cAAA,QAAME,UAAU,cAAa,sBAKrCF,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,UAAQE,UAAU,iBAAiBI,KAAK,UAAS,aAUjE,EAACnC,CAAA,CA5FyB,CAAS6B,EAAAA,U","sources":["webpack://gatsby-starter-decap-cms/./src/pages/contact/file-upload.js"],"sourcesContent":["import * as React from \"react\";\nimport { navigate } from \"gatsby-link\";\nimport Layout from \"../../components/Layout\";\n\nfunction encode(data) {\n  const formData = new FormData();\n\n  for (const key of Object.keys(data)) {\n    formData.append(key, data[key]);\n  }\n\n  return formData;\n}\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleAttachment = (e) => {\n    this.setState({ [e.target.name]: e.target.files[0] });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    fetch(\"/\", {\n      method: \"POST\",\n      body: encode({\n        \"form-name\": form.getAttribute(\"name\"),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute(\"action\")))\n      .catch((error) => alert(error));\n  };\n\n  render() {\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1>File Upload</h1>\n              <form\n                name=\"file-upload\"\n                method=\"post\"\n                action=\"/contact/thanks/\"\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"file-upload\" />\n                <div hidden>\n                  <label>\n                    Don’t fill this out:{\" \"}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"name\"}>\n                    Your name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={\"text\"}\n                      name={\"name\"}\n                      onChange={this.handleChange}\n                      id={\"name\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"file\">\n                    <label className=\"file-label\">\n                      <input\n                        className=\"file-input\"\n                        type=\"file\"\n                        name=\"attachment\"\n                        onChange={this.handleAttachment}\n                      />\n                      <span className=\"file-cta\">\n                        <span className=\"file-label\">Choose a file…</span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <button className=\"button is-link\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n"],"names":["encode","data","formData","FormData","key","Object","keys","append","Contact","_React$Component","props","_this","call","handleChange","e","setState","target","name","value","handleAttachment","files","handleSubmit","preventDefault","form","fetch","method","body","getAttribute","state","then","navigate","catch","error","alert","_inheritsLoose","prototype","render","React","Layout","className","action","onSubmit","this","type","hidden","onChange","htmlFor","id","required"],"sourceRoot":""}
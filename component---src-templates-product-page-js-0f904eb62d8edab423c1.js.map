{"version":3,"file":"component---src-templates-product-page-js-0f904eb62d8edab423c1.js","mappings":"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","sources":["webpack://gatsby-starter-decap-cms/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-starter-decap-cms/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gatsby-starter-decap-cms/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-starter-decap-cms/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gatsby-starter-decap-cms/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-starter-decap-cms/./src/components/Testimonials.js","webpack://gatsby-starter-decap-cms/./src/components/Pricing.js","webpack://gatsby-starter-decap-cms/./src/templates/product-page.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 } from \"uuid\";\n\nconst Testimonials = ({ testimonials }) => (\n  <div>\n    {testimonials.map((testimonial) => (\n      <article key={v4()} className=\"message\">\n        <div className=\"message-body\">\n          {testimonial.quote}\n          <br />\n          <cite> â€“ {testimonial.author}</cite>\n        </div>\n      </article>\n    ))}\n  </div>\n);\n\nTestimonials.propTypes = {\n  testimonials: PropTypes.arrayOf(\n    PropTypes.shape({\n      quote: PropTypes.string,\n      author: PropTypes.string,\n    })\n  ),\n};\n\nexport default Testimonials;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pricing = ({ data }) => (\n  <div className=\"columns\">\n    {data.map((price) => (\n      <div key={price.plan} className=\"column\">\n        <section className=\"section\">\n          <h4 className=\"has-text-centered has-text-weight-semibold\">\n            {price.plan}\n          </h4>\n          <h2 className=\"is-size-1 has-text-weight-bold has-text-primary has-text-centered\">\n            ${price.price}\n          </h2>\n          <p className=\"has-text-weight-semibold\">{price.description}</p>\n          <ul>\n            {price.items.map((item) => (\n              <li key={item} className=\"is-size-5\">\n                {item}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    ))}\n  </div>\n);\n\nPricing.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      plan: PropTypes.string,\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      description: PropTypes.string,\n      items: PropTypes.array,\n    })\n  ),\n};\n\nexport default Pricing;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/Layout\";\nimport Features from \"../components/Features\";\nimport Testimonials from \"../components/Testimonials\";\nimport Pricing from \"../components/Pricing\";\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\nimport FullWidthImage from \"../components/FullWidthImage\";\n\n// eslint-disable-next-line\nexport const ProductPageTemplate = ({\n  image,\n  title,\n  heading,\n  description,\n  intro,\n  main,\n  testimonials,\n  fullImage,\n  pricing,\n}) => {\n  const heroImage = getImage(image) || image;\n  const fullWidthImage = getImage(fullImage) || fullImage;\n\n  return (\n    <div className=\"content\">\n      <FullWidthImage img={heroImage} title={title} />\n      <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-7 is-offset-1\">\n                <h3 className=\"has-text-weight-semibold is-size-2\">\n                  {heading}\n                </h3>\n                <p>{description}</p>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column is-10 is-offset-1\">\n                <Features gridItems={intro.blurbs} /> \n                <div className=\"columns\">\n                  <div className=\"column is-7\">\n                    <h3 className=\"has-text-weight-semibold is-size-3\">\n                      {main.heading}\n                    </h3>\n                    <p>{main.description}</p>\n                  </div>\n                </div>\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-vertical\">\n                    <div className=\"tile\">\n                      <div className=\"tile is-parent is-vertical\">\n                        <article className=\"tile is-child\">\n                          <PreviewCompatibleImage imageInfo={main.image1} />\n                        </article>\n                      </div>\n                      <div className=\"tile is-parent\">\n                        <article className=\"tile is-child\">\n                          <PreviewCompatibleImage imageInfo={main.image2} />\n                        </article>\n                      </div>\n                    </div>\n                    <div className=\"tile is-parent\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image3} />\n                      </article>\n                    </div>\n                  </div>\n                </div>\n                <Testimonials testimonials={testimonials} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <FullWidthImage img={fullWidthImage} imgPosition={\"bottom\"} />\n      <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-10 is-offset-1\">\n                <h2 className=\"has-text-weight-semibold is-size-2\">\n                  {pricing.heading}\n                </h2>\n                <p className=\"is-size-5\">{pricing.description}</p>\n                <Pricing data={pricing.plans} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nProductPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n  main: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    image1: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image2: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image3: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  }),\n  testimonials: PropTypes.array,\n  fullImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  pricing: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    plans: PropTypes.array,\n  }),\n};\n\nconst ProductPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <ProductPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n        main={frontmatter.main}\n        testimonials={frontmatter.testimonials}\n        fullImage={frontmatter.full_image}\n        pricing={frontmatter.pricing}\n      />\n    </Layout>\n  );\n};\n\nProductPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default ProductPage;\n\nexport const productPageQuery = graphql`\n  query ProductPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        heading\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 64, layout: CONSTRAINED)\n              }\n            }\n            text\n          }\n          heading\n          description\n        }\n        main {\n          heading\n          description\n          image1 {\n            alt\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 526, quality: 92, layout: CONSTRAINED)\n              }\n            }\n          }\n          image2 {\n            alt\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 526, quality: 92, layout: CONSTRAINED)\n              }\n            }\n          }\n          image3 {\n            alt\n            image {\n              childImageSharp {\n                gatsbyImageData(quality: 72, layout: FULL_WIDTH)\n              }\n            }\n          }\n        }\n        testimonials {\n          author\n          quote\n        }\n\n        full_image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        pricing {\n          heading\n          description\n          plans {\n            description\n            items\n            plan\n            price\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","test","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","_ref","testimonials","React","map","testimonial","key","v4","className","quote","author","data","price","plan","description","items","item","ProductPageTemplate","image","title","heading","intro","main","fullImage","pricing","heroImage","getImage","fullWidthImage","FullWidthImage","img","Features","gridItems","blurbs","PreviewCompatibleImage","imageInfo","image1","image2","image3","Testimonials","imgPosition","Pricing","plans","_ref2","frontmatter","markdownRemark","Layout","full_image"],"sourceRoot":""}
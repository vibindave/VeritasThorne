{"version":3,"file":"component---src-templates-index-page-js-91671418ca4b0831819c.js","mappings":"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","sources":["webpack://gatsby-starter-decap-cms/./src/components/BlogRoll.js","webpack://gatsby-starter-decap-cms/./src/templates/index-page.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\n\n\nconst BlogRollTemplate = (props) => {\n  \n  const { edges: posts } = props.data.allMarkdownRemark;\n\n  return (\n    <div className=\"columns is-multiline\">\n      {posts &&\n        posts.map(({ node: post }) => (\n          <div className=\"is-parent column is-6\" key={post.id}>\n            <article\n              className={`blog-list-item tile is-child box notification ${\n                post.frontmatter.featuredpost ? 'is-featured' : ''\n              }`}\n            >\n              <header>\n                {post?.frontmatter?.featuredimage && (\n                  <div className=\"featured-thumbnail\">\n                    <PreviewCompatibleImage\n                      imageInfo={{\n                        image: post.frontmatter.featuredimage,\n                        alt: `featured image thumbnail for post ${post.frontmatter.title}`,\n                        width:\n                          post.frontmatter.featuredimage.childImageSharp\n                            .gatsbyImageData.width,\n                        height:\n                          post.frontmatter.featuredimage.childImageSharp\n                            .gatsbyImageData.height,\n                      }}\n                    />\n                  </div>\n                ) }\n                <p className=\"post-meta\">\n                  <Link\n                    className=\"title has-text-primary is-size-4\"\n                    to={post.fields.slug}\n                  >\n                    {post.frontmatter.title}\n                  </Link>\n                  <span> &bull; </span>\n                  <span className=\"subtitle is-size-5 is-block\">\n                    {post.frontmatter.date}\n                  </span>\n                </p>\n              </header>\n              <p>\n                {post.excerpt}\n                <br />\n                <br />\n                <Link className=\"button\" to={post.fields.slug}>\n                  Keep Reading â†’\n                </Link>\n              </p>\n            </article>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\n\nexport default function BlogRoll() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query BlogRollQuery {\n          allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___date] }\n            filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n          ) {\n            edges {\n              node {\n                excerpt(pruneLength: 400)\n                id\n                fields {\n                  slug\n                }\n                frontmatter {\n                  title\n                  templateKey\n                  date(formatString: \"MMMM DD, YYYY\")\n                  featuredpost\n                  featuredimage {\n                    childImageSharp {\n                      gatsbyImageData(\n                        width: 120\n                        quality: 100\n                        layout: CONSTRAINED\n                      )\n\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data, count) => <BlogRollTemplate data={data} count={count} />}\n    />\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\n\nimport Layout from \"../components/Layout\";\nimport Features from \"../components/Features\";\nimport BlogRoll from \"../components/BlogRoll\";\nimport FullWidthImage from \"../components/FullWidthImage\";\n\n// eslint-disable-next-line\nexport const IndexPageTemplate = ({\n  image,\n  title,\n  heading,\n  subheading,\n  mainpitch,\n  description,\n  intro,\n}) => {\n  const heroImage = getImage(image) || image;\n\n  return (\n    <div>\n      <FullWidthImage img={heroImage} title={title} subheading={subheading} />\n      <section className=\"section section--gradient\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-10 is-offset-1\">\n                <div className=\"content\">\n                  <div className=\"content\">\n                    <div className=\"tile\">\n                      <h1 className=\"title\">{mainpitch.title}</h1>\n                    </div>\n                    <div className=\"tile\">\n                      <h3 className=\"subtitle\">{mainpitch.description}</h3>\n                    </div>\n                  </div>\n                  <div className=\"columns\">\n                    <div className=\"column is-12\">\n                      <h3 className=\"has-text-weight-semibold is-size-2\">\n                        {heading}\n                      </h3>\n                      <p>{description}</p>\n                    </div>\n                  </div>\n                  <Features gridItems={intro.blurbs} />\n                  <div className=\"columns\">\n                    <div className=\"column is-12 has-text-centered\">\n                      <Link className=\"btn\" to=\"/products\">\n                        See all products\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"column is-12\">\n                    <h3 className=\"has-text-weight-semibold is-size-2\">\n                      Latest stories\n                    </h3>\n                    <BlogRoll />\n                    <div className=\"column is-12 has-text-centered\">\n                      <Link className=\"btn\" to=\"/blog\">\n                        Read more\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nIndexPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  subheading: PropTypes.string,\n  mainpitch: PropTypes.object,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n};\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n      />\n    </Layout>\n  );\n};\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        heading\n        subheading\n        mainpitch {\n          title\n          description\n        }\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 64, layout: CONSTRAINED)\n              }\n            }\n            text\n          }\n          heading\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["BlogRollTemplate","props","edges","posts","data","allMarkdownRemark","React","className","map","_ref","_post$frontmatter","node","post","key","id","frontmatter","featuredpost","featuredimage","PreviewCompatibleImage","imageInfo","image","alt","title","width","childImageSharp","gatsbyImageData","height","Link","to","fields","slug","date","excerpt","BlogRoll","StaticQuery","query","render","count","IndexPageTemplate","heading","subheading","mainpitch","description","intro","heroImage","getImage","FullWidthImage","img","Features","gridItems","blurbs","_ref2","markdownRemark","Layout"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-contact-index-js-bec2516bedb307cac228.js","mappings":"kOAQC,IAEoBA,EAAK,SAAAC,GACxB,SAAAD,EAAYE,GAAQ,IAADC,EAEmB,OADpCA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,MAIdG,aAAgBC,IACdH,EAAKI,SAAS,CAAE,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,OAAQ,EACnDP,EAEDQ,aAAgBL,IACdA,EAAEM,iBACF,MAAMC,EAAOP,EAAEE,OAlBnB,IAAgBM,EAmBZC,MAAM,IAAK,CACTC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,MAtBUJ,EAsBG,CACX,YAAaD,EAAKM,aAAa,WAC5BhB,EAAKiB,OAvBPC,OAAOC,KAAKR,GAChBS,KAAKC,GAAQC,mBAAmBD,GAAO,IAAMC,mBAAmBX,EAAKU,MACrEE,KAAK,QAwBHC,MAAK,KAAMC,EAAAA,EAAAA,IAASf,EAAKM,aAAa,aACtCU,OAAOC,GAAUC,MAAMD,IAAO,EAnBjC3B,EAAKiB,MAAQ,CAAEY,aAAa,GAAQ7B,CACtC,CAmGC,OAvGuB8B,EAAAA,EAAAA,GAAAjC,EAAAC,GAIvBD,EAAAkC,UAqBDC,OAAA,WACE,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAA,WAASE,UAAU,WACjBF,EAAAA,cAAA,OAAKE,UAAU,aACbF,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,QACE3B,KAAK,UACLO,OAAO,OACPuB,OAAO,mBACP,eAAa,OACb,wBAAsB,YACtBC,SAAUC,KAAK9B,cAGfyB,EAAAA,cAAA,SAAOM,KAAK,SAASjC,KAAK,YAAYC,MAAM,YAC5C0B,EAAAA,cAAA,OAAKO,QAAM,GACTP,EAAAA,cAAA,aAAO,uBACgB,IACrBA,EAAAA,cAAA,SAAO3B,KAAK,YAAYmC,SAAUH,KAAKpC,iBAG3C+B,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,SAAOE,UAAU,QAAQO,QAAS,QAAQ,aAG1CT,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAAA,SACEE,UAAU,QACVI,KAAM,OACNjC,KAAM,OACNmC,SAAUH,KAAKpC,aACfyC,GAAI,OACJC,UAAU,MAIhBX,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,SAAOE,UAAU,QAAQO,QAAS,SAAS,SAG3CT,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAAA,SACEE,UAAU,QACVI,KAAM,QACNjC,KAAM,QACNmC,SAAUH,KAAKpC,aACfyC,GAAI,QACJC,UAAU,MAIhBX,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,SAAOE,UAAU,QAAQO,QAAS,WAAW,WAG7CT,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAAA,YACEE,UAAU,WACV7B,KAAM,UACNmC,SAAUH,KAAKpC,aACfyC,GAAI,UACJC,UAAU,MAIhBX,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,UAAQE,UAAU,iBAAiBI,KAAK,UAAS,aAUjE,EAAC1C,CAAA,CAvGuB,CAASoC,EAAAA,U","sources":["webpack://gatsby-starter-decap-cms/./src/pages/contact/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { navigate } from \"gatsby-link\";\nimport Layout from \"../../components/Layout\";\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\");\n}\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isValidated: false };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encode({\n        \"form-name\": form.getAttribute(\"name\"),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute(\"action\")))\n      .catch((error) => alert(error));\n  };\n\n  render() {\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1>Contact</h1>\n              <form\n                name=\"contact\"\n                method=\"post\"\n                action=\"/contact/thanks/\"\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n                <div hidden>\n                  <label>\n                    Donâ€™t fill this out:{\" \"}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"name\"}>\n                    Your name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={\"text\"}\n                      name={\"name\"}\n                      onChange={this.handleChange}\n                      id={\"name\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"email\"}>\n                    Email\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={\"email\"}\n                      name={\"email\"}\n                      onChange={this.handleChange}\n                      id={\"email\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={\"message\"}>\n                    Message\n                  </label>\n                  <div className=\"control\">\n                    <textarea\n                      className=\"textarea\"\n                      name={\"message\"}\n                      onChange={this.handleChange}\n                      id={\"message\"}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <button className=\"button is-link\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n"],"names":["Index","_React$Component","props","_this","call","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","form","data","fetch","method","headers","body","getAttribute","state","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","isValidated","_inheritsLoose","prototype","render","React","Layout","className","action","onSubmit","this","type","hidden","onChange","htmlFor","id","required"],"sourceRoot":""}